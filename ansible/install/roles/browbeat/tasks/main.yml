---
#
# Browbeat Install
#

- name: Install python development tools
  yum: name=python-devel state=present
  become: true

- name: Install dependencies for CentOS
  yum: name={{ item }} state=present
  become: true
  with_items:
    - libffi-devel
    - openssl-devel
    - gcc
    - gcc-c++

- name: Install pip
  easy_install: name=pip
  become: true

- name: Update virtualenv and setuptools
  pip: name={{item}} state=latest
  become: true
  with_items:
    - virtualenv
    - setuptools

- name: Create browbeat virtualenv
  command: virtualenv {{ browbeat_venv }} creates={{ browbeat_venv }}

- name: Create perfkit virtualenv
  command: virtualenv {{ perfkit_venv }} creates={{ perfkit_venv }}

- name: Create rally virtualenv
  command: virtualenv {{ rally_venv }} creates={{ rally_venv }}

- name: Create shaker virtualenv
  command: virtualenv {{ shaker_venv }} creates={{ shaker_venv }}

- name: Determine if browbeat directory exists already
  stat: path={{ home_dir }}/browbeat
  register: browbeat_exists

- debug: msg="Browbeat directory exists already."
  when: browbeat_exists.stat.isdir is defined and browbeat_exists.stat.isdir

- name: Clone browbeat on undercloud
  git: repo=https://github.com/openstack/browbeat.git dest={{ home_dir }}/browbeat
  when: browbeat_exists.stat.isdir is undefined

- name: Generate hosts and ~/.ssh/config on undercloud
  shell: . {{ home_dir }}/stackrc; {{ home_dir }}/browbeat/ansible/generate_tripleo_hostfile.sh localhost {{ home_dir }}/.ssh/config
  when: tripleo

- name: Move hosts file to correct location
  command: mv {{ home_dir }}/hosts {{ home_dir }}/browbeat/ansible/hosts

- name: Install requirements.txt into browbeat-venv
  pip: requirements={{ browbeat_path }}/requirements.txt virtualenv={{ browbeat_venv }}

- name: Clone PerfKitBenchmarker on undercloud
  git:
    repo=https://github.com/GoogleCloudPlatform/PerfKitBenchmarker.git
    dest={{ perfkit_venv }}/PerfKitBenchmarker
    version=v1.4.0

- name: Install PerfKitBenchmarker requirements into perfkit-venv
  pip:
     requirements={{ perfkit_venv }}/PerfKitBenchmarker/requirements.txt
     virtualenv={{ perfkit_venv }}

- name: Install PerfKitBenchmarker Openstack requirements into perfkit-venv
  pip:
     requirements={{ perfkit_venv }}/PerfKitBenchmarker/requirements-openstack.txt
     virtualenv={{ perfkit_venv }}

- name: Install rally into rally-venv
  pip: name=rally virtualenv={{ rally_venv }}

- name: Setup rally database
  shell: . {{ rally_venv }}/bin/activate; rally-manage db recreate

- name: Setup rally deployment
  shell: . {{ rally_venv }}/bin/activate; . {{ overcloudrc }}; rally deployment create --fromenv --name overcloud

- name: Install shaker
  pip: name=pyshaker version=0.0.10 virtualenv={{ shaker_venv }}

- name: Check for shaker port in iptables
  shell: iptables -nvL | grep -q "dpt:"{{ shaker_port }}""
  become: true
  changed_when: false
  register: shaker_iptables
  ignore_errors: true

- name: Open up shaker port in iptables
  shell: /usr/sbin/iptables -I INPUT 1 -p tcp --dport {{ shaker_port }} -j ACCEPT
  become: true
  when: shaker_iptables.rc == 1

#
# Serve results out of httpd if results_in_httpd is set to true
#

- name: Setup browbeat.conf in /etc/httpd/conf.d
  template:
    src: 00-browbeat.conf.j2
    dest: /etc/httpd/conf.d/00-browbeat.conf
    owner: root
    group: root
    mode: 0644
  become: true
  when: results_in_httpd
  notify:
    - restart httpd

- name: Check iptables for browbeat port(9000)
  shell: iptables -nvL | grep -q "dpt:9000"
  become: true
  changed_when: false
  when: results_in_httpd
  register: browbeat_results_port
  ignore_errors: true

- name: Open iptables for browbeat port(9000)
  shell: /usr/sbin/iptables -I INPUT 1 -p tcp --dport 9000 -j ACCEPT
  become: true
  when: results_in_httpd and browbeat_results_port.rc == 1

- name: Set seboolean(httpd_read_user_content)
  seboolean: name=httpd_read_user_content state=yes persistent=yes
  become: true
  when: results_in_httpd

- name: Allow httpd to serve content in "{{ home_dir }}"
  file: path="{{ home_dir }}" state=directory mode=0755
  when: results_in_httpd

#
# Obtain and upload images for use with browbeat
#

- name: Fetch image
  get_url: url={{ images[item].url }} dest={{ home_dir }}/{{ item }}
  with_items: "{{ images }}"

- name: Determine if image exists
  shell: . {{ overcloudrc }}; glance image-list | grep '{{ item }}'
  register: image_exists
  ignore_errors: true
  changed_when: false
  with_items: "{{ images }}"

- name: Remove image from dictionary of images if image exists
  set_fact: images="{{ images|dict_remove(item[0]) }}"
  when: "'{{ item[0] }}' in '{{ item[1].stdout }}'"
  with_nested:
    - "{{ images }}"
    - "{{ image_exists.results }}"

- name: Upload image into cloud (OSP8)
  shell: . {{ overcloudrc }}; glance image-create --name {{ item }} --visibility public --disk-format=qcow2 --container-format=bare < {{ home_dir }}/{{ item }}
  register: image_osp8
  ignore_errors: true
  with_items: "{{ images }}"

- name: Upload image into cloud (OSP7)
  shell: . {{ overcloudrc }}; glance image-create --name {{ item.item }} --is-public true --disk-format=qcow2 --container-format=bare < {{ home_dir }}/{{ item.item }}
  when: not item.rc == 0
  ignore_errors: true
  with_items: "{{ image_osp8.results }}"
