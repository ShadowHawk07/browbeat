---
#
# Browbeat Install
#

- name: Install browbeat matplotlib dependencies
  yum: name={{ item }} state=present
  become: true
  with_items:
    - freetype-devel
    - libpng-devel

- name: Install pip
  become: true
  easy_install: name=pip

- name: Install virtualenv
  become: true
  pip: name=virtualenv

- name: Create browbeat virtualenv
  command: virtualenv /home/stack/browbeat-venv creates="/home/stack/browbeat-venv"

- name: Create rally virtualenv
  command: virtualenv /home/stack/rally-venv creates="/home/stack/rally-venv"

- name: Clone browbeat on undercloud
  git: repo=https://github.com/jtaleric/browbeat.git dest=/home/stack/browbeat
  when: "'localhost' not in '{{ inventory_hostname }}'"

- name: Generate hosts and ~/.ssh/config on undercloud
  shell: . /home/stack/stackrc; /home/stack/browbeat/ansible/gen_hostfile.sh localhost /home/stack/.ssh/config
  when: "'localhost' not in '{{ inventory_hostname }}'"

- name: Move hosts file to correct location
  command: mv /home/stack/hosts /home/stack/browbeat/ansible/hosts
  when: "'localhost' not in '{{ inventory_hostname }}'"

- name: Install requirements.txt into browbeat-venv
  become: true
  pip: requirements=/home/stack/browbeat/requirements.txt virtualenv=/home/stack/browbeat-venv

- name: Install rally into rally-venv
  become: true
  pip: name=rally virtualenv=/home/stack/rally-venv

- name: Setup rally database
  shell: . /home/stack/rally-venv/bin/activate; rally-manage db recreate

- name: Setup rally deployment
  shell: . /home/stack/rally-venv/bin/activate; . /home/stack/overcloudrc; rally deployment create --fromenv --name overcloud

#
# Serve results out of httpd if results_in_httpd is set to true
#

- name: Setup browbeat.conf in /etc/httpd/conf.d
  copy:
    src: 00-browbeat.conf
    dest: /etc/httpd/conf.d/00-browbeat.conf
    owner: root
    group: root
    mode: 0644
  become: true
  when: results_in_httpd
  notify:
    - restart httpd

- name: Check iptables for browbeat port(9000)
  shell: iptables -nvL | grep -q "dpt:9000"
  become: true
  changed_when: false
  when: results_in_httpd
  register: browbeat_results_port
  ignore_errors: true

- name: Open iptables for browbeat port(9000)
  shell: /usr/sbin/iptables -I INPUT 1 -p tcp --dport 9000 -j ACCEPT
  become: true
  when: results_in_httpd and browbeat_results_port.rc == 1

- name: Set seboolean(httpd_read_user_content)
  seboolean: name=httpd_read_user_content state=yes persistent=yes
  become: true
  when: results_in_httpd

- name: Allow httpd to serve content in /home/stack
  file: path=/home/stack state=directory mode=0755
  when: results_in_httpd

#
# Nova boot image tasks
#

- name: Fetch cirros image
  get_url: url={{ cirros_image_url }} dest=/home/stack/cirros.img

- name: Determine is cirros image exists
  shell: . /home/stack/overcloudrc; glance image-list | grep "cirros"
  register: cirros_image_exists
  ignore_errors: true
  changed_when: false

- name: Upload cirros image into cloud (OSP8)
  shell: . /home/stack/overcloudrc; glance image-create --name cirros --visibility public --disk-format=qcow2 --container-format=bare < /home/stack/cirros.img
  when: "'cirros' not in '{{ cirros_image_exists.stdout }}'"
  register: cirros_image_osp8
  ignore_errors: true

- name: Upload cirros image into cloud (OSP7)
  shell: . /home/stack/overcloudrc; glance image-create --name cirros --is-public true --disk-format=qcow2 --container-format=bare < /home/stack/cirros.img
  when: "'cirros' not in '{{ cirros_image_exists.stdout }}' and not cirros_image_osp8.rc == 0"
  ignore_errors: true


- name: Fetch centos7 image
  get_url: url={{ centos_image_url }} dest=/home/stack/centos7.qcow2

- name: Determine is centos7 image exists
  shell: . /home/stack/overcloudrc; glance image-list | grep "centos7"
  register: centos7_image_exists
  ignore_errors: true
  changed_when: false

- name: Upload centos7 image into cloud (OSP8)
  shell: . /home/stack/overcloudrc; glance image-create --name centos7 --visibility public --disk-format=qcow2 --container-format=bare < /home/stack/centos7.qcow2
  when: "'centos7' not in '{{ centos7_image_exists.stdout }}'"
  register: centos7_image_osp8
  ignore_errors: true

- name: Upload centos7 image into cloud (OSP7)
  shell: . /home/stack/overcloudrc; glance image-create --name centos7 --is-public true --disk-format=qcow2 --container-format=bare < /home/stack/centos7.qcow2
  when: "'centos7' not in '{{ centos7_image_exists.stdout }}' and not centos7_image_osp8.rc == 0"
  ignore_errors: true
